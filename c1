#include <iostream>

using namespace std;


long long fibonacci(int n) {
    if (n <= 1)
        return n;
int dp[n+1]={0};
   
    dp[0] = 0;
    dp[1] = 1;

    for (int i = 2; i <= n; ++i) {
        //  always remembers the past ;)
        dp[i] = dp[i - 1] + dp[i - 2];
    }

    return dp[n];
}


// global variable 
long long int ans=0;



// recursive function

 long long int power(long long int a, long long int b){
      // base case
    if (b == 1)
        return 1;
        
    long long res = power(a, b / 2);
    if (b % 2)
    {   ans+=2;
        return res * res * a;
    }
    else
       {    ans+=1;
           return res * res;}
 }


int main() {
   long long int a,n;
  // here a is the base and n is the power
  cin>>a>>n;
 
 long long int b=power(a,n);
 
 cout<<ans;
}
